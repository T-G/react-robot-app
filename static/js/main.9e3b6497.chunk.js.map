{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/Searchbox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflow","border","height","children","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAUeA,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACKJ,EAAMK,YCYJC,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,qBAAKC,UAAU,kDAAf,SACI,gCACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,aCWTK,EAjBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OACjB,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAMC,GACf,OAAO,cAAC,EAAD,CAEKR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMtBC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,oBACZC,SAAUH,OCeXI,E,kDArBX,WAAYxB,GAAO,IAAD,8BACd,cAAMA,IACDyB,MAAQ,CACTC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG9B,WACI,OAAKG,KAAKJ,MAAMC,SACL,2DAGJG,KAAK7B,MAAMK,a,GAlBE0B,aCsDbC,G,wDA9CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACX,YAAae,EAAMC,OAAOC,SAfzC,EAAKX,MAAQ,CACTX,OAAQ,GACRK,YAAa,IAJR,E,qDASb,WAAoB,IAAD,OACfkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAChB,OAAQ2B,S,oBAS1C,WAAU,IAAD,EAEyBZ,KAAKJ,MAA5BX,EAFF,EAEEA,OAAQK,EAFV,EAEUA,YACTuB,EAAiB5B,EAAO6B,QAAO,SAAAC,GACjC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAAS3B,EAAY0B,kBAGrD,OAAU/B,EAAOiC,OAKb,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcS,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ4B,WAT9B,oBAAIhC,UAAU,QAAd,4B,GA/BEqB,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e3b6497.chunk.js","sourcesContent":["import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflow: 'scroll', border: '5px solid black', height:'500px'}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import react from 'react';\n\nconst Card = ({name, email, id}) => {\n    return (\n        <div className=\"bg-light-green dib pa3 ma2 grow bw2 shadow-5 tc\">\n            <div>\n                <img alt=\"robot\" src={`https://robohash.org/${id}?300x300`}/>\n                <div>\n                    <h2>{name}</h2>\n                    <p>{email}</p>\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ( { robots } ) => {\n    return (\n        <div>\n            {\n                robots.map( (user, i) => {\n                    return <Card \n                                key={i} \n                                id={robots[i].id} \n                                name={robots[i].name} \n                                email={robots[i].email} \n                                />\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({ searchfield, searchChange }) => {\n    return (\n        <div className=\"pa2\" >\n            <input \n                className=\"pa3 ba b--green bg-lightest-blue\"\n                type=\"search\" \n                placeholder='Search for robots' \n                onChange={searchChange}\n            />\n        </div>\n    )\n}\n\nexport default Searchbox;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    // similar to try catch block\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render() {\n        if ( this.state.hasError ) {\n            return <h1>Ooops! That is not good..</h1>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, {Component} from 'react'\nimport Scroll  from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport ErrorBoundary from '../components/ErrorBoundary'\n//import { robots } from './robots';\nimport './App.css';\n\nclass App extends Component {\n    \n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n       // console.log('constructor call');\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots: users}));\n       // console.log('componentDidMount call');\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n\n        }\n\n    render() {\n        \n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        \n            return ( !robots.length ) ?\n                <h1 className=\"f3 tc\">Loading...</h1> :\n            \n            //console.log('render call');\n            (\n                <div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <Searchbox searchChange={this.onSearchChange}/>\n                    <Scroll>\n                        <ErrorBoundary>\n                            <CardList robots={filteredRobots}/>\n                        </ErrorBoundary>\n                    </Scroll>\n                </div>\n            );\n        }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}